import telebot
import replics
import requests

token = "6819720754:AAEArmC7be4NY3Zwa6onRHLtvA6e_t4h1BQ"
bot = telebot.TeleBot(token=token)

proxies = {'https': 'socks5://198.50.217.202:1080'}

city = '–°–∞–º–∞—Ä–∞'
url = 'https://api.openweathermap.org/data/2.5/weather?q=' + city + '&units=metric&lang=ru&appid=79d1ca96933b0328e1c7e3e7a26cb347'

@bot.message_handler(commands=['start'])
def handle_start(message):
    bot.send_message(message.chat.id, '''–ü—Ä–∏–≤–µ—Ç! –Ø - –±–æ—Ç-–≤–∏–∑–∏—Ç–∫–∞. –¢—ã –º–æ–∂–µ—à—å –¥–∞–≤–∞—Ç—å –º–Ω–µ –∫–æ–º–∞–Ω–¥—ã. –ù–∞–ø—Ä–∏–º–µ—Ä,
    /help - –ø–æ–¥—Å–∫–∞–∂—É, –∫–∞–∫ —è —Ä–∞–±–æ—Ç–∞—é.
–ù–æ –º–æ–∂–Ω–æ –ø—Ä–æ—Å—Ç–æ –ø–µ—Ä–µ–ø–∏—Å—ã–≤–∞—Ç—å—Å—è —Å–æ –º–Ω–æ–π, –∫–∞–∫ —Å —á–µ–ª–æ–≤–µ–∫–æ–º.''')

@bot.message_handler(commands=['help'])
def handle_help(message):
    bot.send_message(message.chat.id, replics.h)

@bot.message_handler(commands=['about'])
def handle_about(message):
    bot.send_message(message.chat.id, replics.cart)
    bot.send_message(message.chat.id, '–ú–æ–∂–µ—à—å –ø–æ–¥—Ä–æ–±–Ω–µ–µ —É–∑–Ω–∞—Ç—å –ø—Ä–æ –∫–∞–∫—É—é-—Ç–æ —á–µ—Ä—Ç—É –ø–µ—Ä—Å–æ–Ω–∞–∂–∞ —á–µ—Ä–µ–∑ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–µ –∫–æ–º–∞–Ω–¥—ã.')
@bot.message_handler(commands=['about_personality'])
def health(message):
    bot.send_message(message.chat.id, replics.cartoon['–•–∞—Ä–∞–∫—Ç–µ—Ä'])
@bot.message_handler(commands=['about_biography'])
def speed(message):
    bot.send_message(message.chat.id, replics.cartoon['–ë–∏–æ–≥—Ä–∞—Ñ–∏—è'])
@bot.message_handler(commands=['about_power'])
def power(message):
    bot.send_message(message.chat.id, replics.cartoon['–°–∏–ª–∞'])
@bot.message_handler(commands=['about_age'])
def age(message):
    bot.send_message(message.chat.id, replics.cartoon['–í–æ–∑—Ä–∞—Å—Ç'])
@bot.message_handler(commands=['questionnaire'])
def handle_about(message):
    bot.send_message(message.chat.id, '–£–ø—Å, —ç—Ç–∞ –∫–æ–º–∞–Ω–¥–∞ –ø–æ–∫–∞ –Ω–µ —Ä–∞–±–æ—Ç–∞–µ—Ç.')
@bot.message_handler(commands=['weather'])
def weather(message):
    weather_data = requests.get(url).json()
    temperature = str(round(weather_data['main']['temp']))
    temperature_feels = str(round(weather_data['main']['feels_like']))
    bot.send_message(message.chat.id, text='–°–µ–π—á–∞—Å –≤ –≥–æ—Ä–æ–¥–µ '+city+' '+temperature+'¬∞C')
    bot.send_message(message.chat.id, text='–û—â—É—â–∞–µ—Ç—Å—è –∫–∞–∫ '+temperature_feels+'¬∞C')
    wind_speed = round(weather_data['wind']['speed'])
    if wind_speed < 5:
        bot.send_message(message.from_user.id, '‚úÖ –ü–æ–≥–æ–¥–∞ —Ö–æ—Ä–æ—à–∞—è, –≤–µ—Ç—Ä–∞ –ø–æ—á—Ç–∏ –Ω–µ—Ç')
    elif wind_speed < 10:
        bot.send_message(message.from_user.id, 'ü§î –ù–∞ —É–ª–∏—Ü–µ –≤–µ—Ç—Ä–µ–Ω–æ, –æ–¥–µ–Ω—å—Ç–µ—Å—å —á—É—Ç—å —Ç–µ–ø–ª–µ–µ')
    elif wind_speed < 20:
        bot.send_message(message.from_user.id, '‚ùóÔ∏è –í–µ—Ç–µ—Ä –æ—á–µ–Ω—å —Å–∏–ª—å–Ω—ã–π, –±—É–¥—å—Ç–µ –æ—Å—Ç–æ—Ä–æ–∂–Ω—ã, –≤—ã—Ö–æ–¥—è –∏–∑ –¥–æ–º–∞')
    else:
        bot.send_message(message.from_user.id, '‚ùå –ù–∞ —É–ª–∏—Ü–µ —à—Ç–æ—Ä–º, –Ω–∞ —É–ª–∏—Ü—É –ª—É—á—à–µ –Ω–µ –≤—ã—Ö–æ–¥–∏—Ç—å')
    bot.send_message(message.from_user.id, '–°–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞ —Ä–∞–≤–Ω–∞ '+str(wind_speed))

def if_hello(messege):
    return '–ø—Ä–∏–≤' in messege.text.lower()
@bot.message_handler(content_types=['text'], func=if_hello)
def hello(messege):
    bot.send_message(messege.from_user.id, replics._hi_(replics.hi))

def if_by(messege):
    if '–ø–æ–∫–∞' in messege.text.lower() or '–¥–æ —Å–≤–∏–¥–∞–Ω–∏—è' in messege.text.lower() or '–¥–æ –≤—Å—Ç—Ä–µ—á–∏' in messege.text.lower():
        answer = True
    else:
        answer = False
    return answer
@bot.message_handler(content_types=['text'], func=if_by)
def by(messege):
    bot.send_message(messege.from_user.id, replics._by_(replics.by))

def know(messege):
    if '–∫–∞–∫' in messege.text.lower() and '–¥–µ–ª–∞' in messege.text.lower():
        answer = True
    else:
        answer = False
    return answer
@bot.message_handler(content_types=['text'], func=know)
def _know_(messege):
    bot.send_message(messege.from_user.id, replics._know_(replics.know))

def if_good(messege):
    if ('–Ω–æ—Ä–º' in messege.text.lower()) or '—Ö–æ—Ä–æ—à–æ' in messege.text.lower():
        answer = True
    else:
        answer = False
    return answer
@bot.message_handler(content_types=['text'], func=if_good)
def good(messege):
    bot.send_message(messege.from_user.id, replics._good_(replics.good))

def if_bad(messege):
    if '–ø–ª–æ—Ö' in messege.text.lower() or '—É–∂–∞—Å' in messege.text.lower():
        answer = True
    else:
        answer = False
    return answer
@bot.message_handler(content_types=['text'], func=if_bad)
def bad(messege):
    bot.send_message(messege.from_user.id, replics._bad_(replics.bad))

def thank(messege):
    if '—Å–ø—Å' in messege.text.lower() or '—Å–ø–∞—Å–∏–±' in messege.text.lower():
        answer = True
    else:
        answer = False
    return answer
@bot.message_handler(content_types=['text'], func=thank)
def thanks(messege):
    bot.send_message(messege.from_user.id, replics._thanks_(replics.thanks))

def if_help(messege):
    return '–ø–æ–º–æ–≥–∏' in messege.text.lower()
@bot.message_handler(content_types=['text'], func=if_help)
def help(messege):
    bot.send_message(messege.from_user.id, '–ú–æ–∂–µ—Ç —Ç–µ–±–µ –æ–±—Ä–∞—Ç–∏—Ç—Å—è –∑–∞ –ø–æ–º–æ—â—å—é –∫ –∫–æ–º—É-—Ç–æ –ø–æ-–æ–ø—ã—Ç–Ω–µ–µ –∏–ª–∏ –ø–æ–∏—Å–∫–∞—Ç—å –≤ –∏–Ω—Ç–µ—Ä–Ω–µ—Ç–µ? –Ø –µ—â—ë –æ—á–µ–Ω—å –º–∞–ª–æ –∑–Ω–∞—é')

@bot.message_handler(content_types=['photo'])
def get_photo(messege):
    bot.send_photo(messege.from_user.id, open(replics._photo_(replics.photo), 'rb'), caption = replics._coment_(replics.coments))

@bot.message_handler(content_types=['text', 'voice', 'video', 'animation', 'document'])
def i_dont_know(messege):
    bot.send_message(messege.from_user.id, '–ü–æ–Ω—è–ª, –ø—Ä–∏–Ω—è–ª, –æ–±—Ä–∞–±–æ—Ç–∞–ª, –ø—Ä–æ–º–æ–ª—á–∞–ª.')

bot.polling()